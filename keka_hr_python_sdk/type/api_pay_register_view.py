# coding: utf-8

"""
    Requisition

    Here's our story,  It all began with the frustration of using software that sucks. Prior to starting Keka, our core team was a 100 person business that needed an easy to use software for managing employees. We looked everywhere and all we found were software that was lousy and hard to use. We felt SME businesses in India deserved something better. Something awesome actually!  Thus emerged Keka!

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from keka_hr_python_sdk.type.employee_payroll_cycle_run_status import EmployeePayrollCycleRunStatus
from keka_hr_python_sdk.type.employment_status import EmploymentStatus
from keka_hr_python_sdk.type.gender import Gender
from keka_hr_python_sdk.type.pay_item_view import PayItemView
from keka_hr_python_sdk.type.remuneration_type import RemunerationType
from keka_hr_python_sdk.type.worker_type import WorkerType

class RequiredAPIPayRegisterView(TypedDict):
    pass

class OptionalAPIPayRegisterView(TypedDict, total=False):
    identifier: typing.Optional[str]

    employeeNumber: typing.Optional[str]

    employeeName: typing.Optional[str]

    panNumber: typing.Optional[str]

    dateJoined: typing.Optional[datetime]

    jobTitle: typing.Optional[str]

    department: typing.Optional[str]

    location: typing.Optional[str]

    payGroup: typing.Optional[str]

    employmentStatus: EmploymentStatus

    workerType: WorkerType

    costCenter: typing.Optional[str]

    businessUnit: typing.Optional[str]

    remunerationType: RemunerationType

    gender: Gender

    dateOfBirth: typing.Optional[datetime]

    exitDate: typing.Optional[datetime]

    cycleIdentifier: typing.Optional[str]

    cycleFrom: datetime

    cycleTo: datetime

    cycleMonthName: typing.Optional[str]

    cycleMonth: int

    cycleYear: int

    cyclePayDays: typing.Union[int, float]

    workingDays: typing.Union[int, float]

    lossOfPayDays: typing.Union[int, float]

    noOfPayDays: typing.Union[int, float]

    renumerationAmount: typing.Optional[typing.Union[int, float]]

    status: EmployeePayrollCycleRunStatus

    statusDescription: typing.Optional[str]

    earnings: typing.Optional[typing.List[PayItemView]]

    contributions: typing.Optional[typing.List[PayItemView]]

    deductions: typing.Optional[typing.List[PayItemView]]

    reimbursements: typing.Optional[typing.List[PayItemView]]

    outsideGrossPayables: typing.Optional[typing.List[PayItemView]]

    grossAmount: typing.Union[int, float]

    totalOutsideGrossAmount: typing.Union[int, float]

    total: typing.Union[int, float]

    totalContributions: typing.Union[int, float]

    totalDeductions: typing.Union[int, float]

    totalReimbursements: typing.Union[int, float]

    cashAdvanceAmount: typing.Union[int, float]

    cashAdvanceSettlementAmount: typing.Union[int, float]

    netAmount: typing.Union[int, float]

class APIPayRegisterView(RequiredAPIPayRegisterView, OptionalAPIPayRegisterView):
    pass
