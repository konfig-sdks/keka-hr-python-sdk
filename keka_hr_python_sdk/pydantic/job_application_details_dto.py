# coding: utf-8

"""
    Requisition

    Here's our story,  It all began with the frustration of using software that sucks. Prior to starting Keka, our core team was a 100 person business that needed an easy to use software for managing employees. We looked everywhere and all we found were software that was lousy and hard to use. We felt SME businesses in India deserved something better. Something awesome actually!  Thus emerged Keka!

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from keka_hr_python_sdk.pydantic.application_status import ApplicationStatus
from keka_hr_python_sdk.pydantic.job_application_details_dto_screening_questions_response import JobApplicationDetailsDTOScreeningQuestionsResponse

class JobApplicationDetailsDTO(BaseModel):
    # Gets or sets the job hiring stage identifier.
    job_hiring_stage_id: typing.Optional[typing.Optional[str]] = Field(None, alias='jobHiringStageId')

    # Gets or sets the moved to current stage on.
    movedto_stage_on: typing.Optional[typing.Optional[str]] = Field(None, alias='movedtoStageOn')

    screening_questions_response: typing.Optional[JobApplicationDetailsDTOScreeningQuestionsResponse] = Field(None, alias='screeningQuestionsResponse')

    # Gets or sets the applied on.
    applied_on: typing.Optional[typing.Optional[str]] = Field(None, alias='appliedOn')

    status: typing.Optional[ApplicationStatus] = Field(None, alias='status')

    # Gets or sets the sourced by.
    sourced_by: typing.Optional[typing.Optional[str]] = Field(None, alias='sourcedBy')

    # Gets or sets the source title.
    source_title: typing.Optional[typing.Optional[str]] = Field(None, alias='sourceTitle')

    # Gets or sets the assigned to.
    assigned_to: typing.Optional[typing.Optional[str]] = Field(None, alias='assignedTo')

    # Gets or sets the assigned on.
    assigned_on: typing.Optional[typing.Optional[str]] = Field(None, alias='assignedOn')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
